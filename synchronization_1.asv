%% Synchronization_1
function synchronization_1

%% Description
%%
%  File type:    Executable file

%%
%  Summary:
%  This is the first file need to be excute for the whole project.
%  This script converts all .xlsx data into .mat format for further
%  processing

%%
%  Examples: 
%Provide sample usage code here

%%
%  Algorithm:
%df
%dsf

%%
%  See also:
% * ITEM1
% * ITEM2

%%
%  Author:       Yuan Ma
%  Date:         Oct.18.2014
%  Revision:     0.1
%  Partner:      Worked with Tianyu Wang, Yulong Li
%  Copyright:    Intelligent System Laboratory
%                University of Michigan Dearborn

%% Initialization and Configuration
clear all; clc; tic;
ini = IniConfig();
ini.ReadFile('configuration.ini');
%# warning off;

% CD the data folder
% addpath('C:\Users\Xipeng1990\Desktop\Synchronization')
% cd('./Data3');

%Data_directory = '../Lane_Change_original_data/';
Data_Path = ini.GetValues('Path Setting', 'DATA_PATH');
fd_list = dir(Data_Path);
num_folder = 0;

%% Start Processing each Signal data
% search the data folder and list all the folders and ignore files.
for i = 1:size(fd_list,1)
    stuct = fd_list(i,1);
    if (stuct.isdir == 1)
        num_folder = num_folder + 1;
    end
end
num_folder = num_folder - 2;    % ignore './' and '../'

% Process RSP Data
for m = 1:num_folder
    [Rsp_Data,Rsp_Txt,~] = xlsread(strcat(Data_Path, num2str(m), ...
        '/RSP.xlsx'));
    if (Rsp_Data(1,1) > 0.5) && (Rsp_Data(end,1) < 0.5)
        Reverse = find(Rsp_Data(:,1) < 0.5);
        Rsp_Data(Reverse,1) = Rsp_Data(Reverse,1) + 1;
    end
end

% Process GSR Data
[Gsr_Data,Gsr_Txt,~] = xlsread(strcat(Data_Path, num2str(m), ...
    '/GSR.xlsx'));
if (Gsr_Data(1,1) > 0.5) && (Gsr_Data(end,1) < 0.5)
    Reverse = find(Gsr_Data(:,1) < 0.5);
    Gsr_Data(Reverse,1) = Gsr_Data(Reverse,1) + 1;
end

% Process ECG Data
[EcgData,EcgTxt,~] = xlsread(strcat(Data_Path, num2str(m), ...
    '/HR.xlsx'));
if (EcgData(1,1) > 0.5) && (EcgData(end,1) < 0.5)
    Reverse = find(EcgData(:,1) < 0.5);
    EcgData(Reverse,1) = EcgData(Reverse,1) + 1;
end

% PROCESS OBD DATA
[VehData,VehTxt,~] = xlsread(strcat(Data_Path, num2str(m), ...
    '/OBD.xlsx'));

% PROCESS GSR_RAW DATA
[GSR_RAWData,GSR_RAWTxt] = xlsread(strcat(Data_Path, num2str(m), ...
    '/GSR_RAW.xlsx'));
if (GSR_RAWData(1,1) > 0.5) && (GSR_RAWData(end,1) < 0.5)
    Reverse = find(GSR_RAWData(:,1)<0.5);
    GSR_RAWData(Reverse,1) = GSR_RAWData(Reverse,1) + 1;
end

% PROCESS ECG_RAW DATA
[ECG_RAWData,ECG_RAWTxt] = xlsread(strcat(Data_Path, num2str(m), ...
    '/ECG_RAW.xlsx'));
if (ECG_RAWData(1,1) > 0.5) && (ECG_RAWData(end,1) < 0.5)
    Reverse = find(ECG_RAWData(:,1)<0.5);
    ECG_RAWData(Reverse,1) = ECG_RAWData(Reverse,1) + 1;
end

% PROCESS BELT DATA
[BELT_RAWData,BELT_RAWTxt] = xlsread(strcat(Data_Path, num2str(m), ...
    '/Belt.xlsx'));
if (BELT_RAWData(1,1) > 0.5) && (BELT_RAWData(end,1) < 0.5)
    Reverse = find(BELT_RAWData(:,1) < 0.5);
    BELT_RAWData(Reverse,1) = BELT_RAWData(Reverse,1) + 1;
end

% PROCESS ACC DATA
[ACC_RAWData,ACC_RAWTxt] = xlsread(strcat(Data_Path, num2str(m), ...
    '/Acc.xlsx'));
if (ACC_RAWData(1,1) > 0.5) && (ACC_RAWData(end,1) < 0.5)
    Reverse = find(ACC_RAWData(:,1)<0.5);
    ACC_RAWData(Reverse,1) = ACC_RAWData(Reverse,1) + 1;
end

% save the mat raw data
[targetData, targetTxt, ~] = xlsread(strcat(Data_Path, num2str(m), '/target.xls'));      
targetIdx = targetData;
% save the mat raw data
%save('RawDataAll');
% save the num data

% TextIndex is a structure store the name of all signals, first column is
% time
TextIndex{1,1} = 'Time';
k = 2;
TextIndex{k,1} = EcgTxt{1,2};%%
k = k+1;
TextIndex{k,1} = EcgTxt{1,3};%%
k = k+1;

% Save Rsp data information into TextIndex
for i = 2:length(Rsp_Txt(1,:))
    TextIndex{k,1} = Rsp_Txt{1,i};
    k = k + 1;
end

% Save Gsr data information into TextIndex
for i = 2:length(Gsr_Txt(1,:))
    TextIndex{k,1} = Gsr_Txt{1,i};
    k = k+1;
end

% Save GSR RAW data information into TextIndex
for i = 3:length(GSR_RAWTxt(1,:))
    TextIndex{k,1} = GSR_RAWTxt{1,i};
    k = k+1;
end

% Finally column store the target Information
TextIndex{k,1} = targetTxt{1,16};
k = k+1;

% Save processed data
save('./Synchronization_1_Output/NumberData','RspData','GsrData','EcgData','VehData','TextIndex','GSR_RAWData','ECG_RAWData','BELT_RAWData','ACC_RAWData','targetData','m');

%%
toc; % end of program


